[0m[1mmodule.aws-networking.data.aws_availability_zones.az: Reading...[0m[0m
[0m[1mdata.aws_vpc.vpc: Reading...[0m[0m
[0m[1mdata.aws_ami.linux: Reading...[0m[0m
[0m[1mmodule.aws-networking.data.aws_availability_zones.az: Read complete after 1s [id=us-east-1][0m
[0m[1mdata.aws_ami.linux: Read complete after 1s [id=ami-0bef12ee7bc073414][0m
[0m[1mdata.aws_vpc.vpc: Read complete after 2s [id=vpc-072aaff63655411cb][0m
[0m[1mdata.aws_subnet.vpc_subnets: Reading...[0m[0m
[0m[1mdata.aws_subnet.vpc_subnets: Read complete after 0s [id=subnet-00c34765c9fc3e072][0m

Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m
 [36m<=[0m read (data resources)[0m

Terraform will perform the following actions:

[1m  # module.aws-networking.aws_eip.demo_eip[0m will be created
[0m  [32m+[0m[0m resource "aws_eip" "demo_eip" {
      [32m+[0m[0m allocation_id        = (known after apply)
      [32m+[0m[0m association_id       = (known after apply)
      [32m+[0m[0m carrier_ip           = (known after apply)
      [32m+[0m[0m customer_owned_ip    = (known after apply)
      [32m+[0m[0m domain               = (known after apply)
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m instance             = (known after apply)
      [32m+[0m[0m network_border_group = (known after apply)
      [32m+[0m[0m network_interface    = (known after apply)
      [32m+[0m[0m private_dns          = (known after apply)
      [32m+[0m[0m private_ip           = (known after apply)
      [32m+[0m[0m public_dns           = (known after apply)
      [32m+[0m[0m public_ip            = (known after apply)
      [32m+[0m[0m public_ipv4_pool     = (known after apply)
      [32m+[0m[0m tags_all             = (known after apply)
      [32m+[0m[0m vpc                  = (known after apply)
    }

[1m  # module.aws-networking.aws_internet_gateway.igw[0m will be created
[0m  [32m+[0m[0m resource "aws_internet_gateway" "igw" {
      [32m+[0m[0m arn      = (known after apply)
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m owner_id = (known after apply)
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Environment" = "test"
          [32m+[0m[0m "Name"        = "test-igw"
        }
      [32m+[0m[0m tags_all = {
          [32m+[0m[0m "Environment" = "test"
          [32m+[0m[0m "Name"        = "test-igw"
        }
      [32m+[0m[0m vpc_id   = (known after apply)
    }

[1m  # module.aws-networking.aws_nat_gateway.demo_nat_gateway[0m will be created
[0m  [32m+[0m[0m resource "aws_nat_gateway" "demo_nat_gateway" {
      [32m+[0m[0m allocation_id                      = (known after apply)
      [32m+[0m[0m association_id                     = (known after apply)
      [32m+[0m[0m connectivity_type                  = "public"
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m network_interface_id               = (known after apply)
      [32m+[0m[0m private_ip                         = (known after apply)
      [32m+[0m[0m public_ip                          = (known after apply)
      [32m+[0m[0m secondary_private_ip_address_count = (known after apply)
      [32m+[0m[0m secondary_private_ip_addresses     = (known after apply)
      [32m+[0m[0m subnet_id                          = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1m  # module.aws-networking.aws_route_table.public_route[0m will be created
[0m  [32m+[0m[0m resource "aws_route_table" "public_route" {
      [32m+[0m[0m arn              = (known after apply)
      [32m+[0m[0m id               = (known after apply)
      [32m+[0m[0m owner_id         = (known after apply)
      [32m+[0m[0m propagating_vgws = (known after apply)
      [32m+[0m[0m route            = [
          [32m+[0m[0m {
              [32m+[0m[0m carrier_gateway_id         = ""
              [32m+[0m[0m cidr_block                 = "0.0.0.0/0"
              [32m+[0m[0m core_network_arn           = ""
              [32m+[0m[0m destination_prefix_list_id = ""
              [32m+[0m[0m egress_only_gateway_id     = ""
              [32m+[0m[0m gateway_id                 = (known after apply)
              [32m+[0m[0m ipv6_cidr_block            = ""
              [32m+[0m[0m local_gateway_id           = ""
              [32m+[0m[0m nat_gateway_id             = ""
              [32m+[0m[0m network_interface_id       = ""
              [32m+[0m[0m transit_gateway_id         = ""
              [32m+[0m[0m vpc_endpoint_id            = ""
              [32m+[0m[0m vpc_peering_connection_id  = ""
            },
        ]
      [32m+[0m[0m tags             = {
          [32m+[0m[0m "Name" = "test-public-route"
        }
      [32m+[0m[0m tags_all         = {
          [32m+[0m[0m "Name" = "test-public-route"
        }
      [32m+[0m[0m vpc_id           = (known after apply)
    }

[1m  # module.aws-networking.aws_route_table_association.public_subnet_assoc[0][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_subnet_assoc" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.aws-networking.aws_route_table_association.public_subnet_assoc[1][0m will be created
[0m  [32m+[0m[0m resource "aws_route_table_association" "public_subnet_assoc" {
      [32m+[0m[0m id             = (known after apply)
      [32m+[0m[0m route_table_id = (known after apply)
      [32m+[0m[0m subnet_id      = (known after apply)
    }

[1m  # module.aws-networking.aws_security_group.sg[0m will be created
[0m  [32m+[0m[0m resource "aws_security_group" "sg" {
      [32m+[0m[0m arn                    = (known after apply)
      [32m+[0m[0m description            = "Default security group to allow inbound/outbound from the VPC"
      [32m+[0m[0m egress                 = [
          [32m+[0m[0m {
              [32m+[0m[0m cidr_blocks      = [
                  [32m+[0m[0m "0.0.0.0/0",
                ]
              [32m+[0m[0m description      = ""
              [32m+[0m[0m from_port        = 0
              [32m+[0m[0m ipv6_cidr_blocks = []
              [32m+[0m[0m prefix_list_ids  = []
              [32m+[0m[0m protocol         = "-1"
              [32m+[0m[0m security_groups  = []
              [32m+[0m[0m self             = true
              [32m+[0m[0m to_port          = 0
            },
        ]
      [32m+[0m[0m id                     = (known after apply)
      [32m+[0m[0m ingress                = (known after apply)
      [32m+[0m[0m name                   = "default-sg"
      [32m+[0m[0m name_prefix            = (known after apply)
      [32m+[0m[0m owner_id               = (known after apply)
      [32m+[0m[0m revoke_rules_on_delete = false
      [32m+[0m[0m tags                   = {
          [32m+[0m[0m "Name" = "allow SSH"
        }
      [32m+[0m[0m tags_all               = {
          [32m+[0m[0m "Name" = "allow SSH"
        }
      [32m+[0m[0m vpc_id                 = (known after apply)
    }

[1m  # module.aws-networking.aws_subnet.private_subnet[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.3.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "test-private-subnet.1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "test-private-subnet.1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.aws-networking.aws_subnet.private_subnet[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "private_subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.4.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "test-private-subnet.2"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "test-private-subnet.2"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.aws-networking.aws_subnet.public_subnet[0][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1a"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.1.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "test-public-subnet.1"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "test-public-subnet.1"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.aws-networking.aws_subnet.public_subnet[1][0m will be created
[0m  [32m+[0m[0m resource "aws_subnet" "public_subnet" {
      [32m+[0m[0m arn                                            = (known after apply)
      [32m+[0m[0m assign_ipv6_address_on_creation                = false
      [32m+[0m[0m availability_zone                              = "us-east-1b"
      [32m+[0m[0m availability_zone_id                           = (known after apply)
      [32m+[0m[0m cidr_block                                     = "10.0.2.0/24"
      [32m+[0m[0m enable_dns64                                   = false
      [32m+[0m[0m enable_resource_name_dns_a_record_on_launch    = false
      [32m+[0m[0m enable_resource_name_dns_aaaa_record_on_launch = false
      [32m+[0m[0m id                                             = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_association_id                 = (known after apply)
      [32m+[0m[0m ipv6_native                                    = false
      [32m+[0m[0m map_public_ip_on_launch                        = false
      [32m+[0m[0m owner_id                                       = (known after apply)
      [32m+[0m[0m private_dns_hostname_type_on_launch            = (known after apply)
      [32m+[0m[0m tags                                           = {
          [32m+[0m[0m "Name" = "test-public-subnet.2"
        }
      [32m+[0m[0m tags_all                                       = {
          [32m+[0m[0m "Name" = "test-public-subnet.2"
        }
      [32m+[0m[0m vpc_id                                         = (known after apply)
    }

[1m  # module.aws-networking.aws_vpc.demo_vpc[0m will be created
[0m  [32m+[0m[0m resource "aws_vpc" "demo_vpc" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = "10.0.0.0/16"
      [32m+[0m[0m default_network_acl_id               = (known after apply)
      [32m+[0m[0m default_route_table_id               = (known after apply)
      [32m+[0m[0m default_security_group_id            = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = true
      [32m+[0m[0m enable_dns_support                   = true
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = "default"
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m ipv6_cidr_block_network_border_group = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Environment" = "test"
          [32m+[0m[0m "Name"        = "test-vpc"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Environment" = "test"
          [32m+[0m[0m "Name"        = "test-vpc"
        }
    }

[1m  # module.ec2.data.aws_ami.linux[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_ami" "linux" {
      [32m+[0m[0m architecture          = (known after apply)
      [32m+[0m[0m arn                   = (known after apply)
      [32m+[0m[0m block_device_mappings = (known after apply)
      [32m+[0m[0m boot_mode             = (known after apply)
      [32m+[0m[0m creation_date         = (known after apply)
      [32m+[0m[0m deprecation_time      = (known after apply)
      [32m+[0m[0m description           = (known after apply)
      [32m+[0m[0m ena_support           = (known after apply)
      [32m+[0m[0m hypervisor            = (known after apply)
      [32m+[0m[0m id                    = (known after apply)
      [32m+[0m[0m image_id              = (known after apply)
      [32m+[0m[0m image_location        = (known after apply)
      [32m+[0m[0m image_owner_alias     = (known after apply)
      [32m+[0m[0m image_type            = (known after apply)
      [32m+[0m[0m imds_support          = (known after apply)
      [32m+[0m[0m kernel_id             = (known after apply)
      [32m+[0m[0m most_recent           = true
      [32m+[0m[0m name                  = (known after apply)
      [32m+[0m[0m owner_id              = (known after apply)
      [32m+[0m[0m owners                = [
          [32m+[0m[0m "amazon",
        ]
      [32m+[0m[0m platform              = (known after apply)
      [32m+[0m[0m platform_details      = (known after apply)
      [32m+[0m[0m product_codes         = (known after apply)
      [32m+[0m[0m public                = (known after apply)
      [32m+[0m[0m ramdisk_id            = (known after apply)
      [32m+[0m[0m root_device_name      = (known after apply)
      [32m+[0m[0m root_device_type      = (known after apply)
      [32m+[0m[0m root_snapshot_id      = (known after apply)
      [32m+[0m[0m sriov_net_support     = (known after apply)
      [32m+[0m[0m state                 = (known after apply)
      [32m+[0m[0m state_reason          = (known after apply)
      [32m+[0m[0m tags                  = (known after apply)
      [32m+[0m[0m tpm_support           = (known after apply)
      [32m+[0m[0m usage_operation       = (known after apply)
      [32m+[0m[0m virtualization_type   = (known after apply)

      [32m+[0m[0m filter {
          [32m+[0m[0m name   = "name"
          [32m+[0m[0m values = [
              [32m+[0m[0m "amzn2-ami-hvm-*-x86_64-gp2",
            ]
        }
      [32m+[0m[0m filter {
          [32m+[0m[0m name   = "virtualization-type"
          [32m+[0m[0m values = [
              [32m+[0m[0m "hvm",
            ]
        }
    }

[1m  # module.ec2.data.aws_vpc.vpc[0m will be read during apply
  # (depends on a resource or a module with changes pending)
[0m [36m<=[0m[0m data "aws_vpc" "vpc" {
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m cidr_block                           = (known after apply)
      [32m+[0m[0m cidr_block_associations              = (known after apply)
      [32m+[0m[0m default                              = (known after apply)
      [32m+[0m[0m dhcp_options_id                      = (known after apply)
      [32m+[0m[0m enable_dns_hostnames                 = (known after apply)
      [32m+[0m[0m enable_dns_support                   = (known after apply)
      [32m+[0m[0m enable_network_address_usage_metrics = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_tenancy                     = (known after apply)
      [32m+[0m[0m ipv6_association_id                  = (known after apply)
      [32m+[0m[0m ipv6_cidr_block                      = (known after apply)
      [32m+[0m[0m main_route_table_id                  = (known after apply)
      [32m+[0m[0m owner_id                             = (known after apply)
      [32m+[0m[0m state                                = (known after apply)
      [32m+[0m[0m tags                                 = (known after apply)

      [32m+[0m[0m filter {
          [32m+[0m[0m name   = "tag:Name"
          [32m+[0m[0m values = [
              [32m+[0m[0m "app-3-vpc",
            ]
        }
    }

[1m  # module.ec2.aws_instance.demo_ec2[0m will be created
[0m  [32m+[0m[0m resource "aws_instance" "demo_ec2" {
      [32m+[0m[0m ami                                  = "ami-0d7a109bf30624c99"
      [32m+[0m[0m arn                                  = (known after apply)
      [32m+[0m[0m associate_public_ip_address          = (known after apply)
      [32m+[0m[0m availability_zone                    = (known after apply)
      [32m+[0m[0m cpu_core_count                       = (known after apply)
      [32m+[0m[0m cpu_threads_per_core                 = (known after apply)
      [32m+[0m[0m disable_api_stop                     = (known after apply)
      [32m+[0m[0m disable_api_termination              = (known after apply)
      [32m+[0m[0m ebs_optimized                        = (known after apply)
      [32m+[0m[0m get_password_data                    = false
      [32m+[0m[0m host_id                              = (known after apply)
      [32m+[0m[0m host_resource_group_arn              = (known after apply)
      [32m+[0m[0m iam_instance_profile                 = (known after apply)
      [32m+[0m[0m id                                   = (known after apply)
      [32m+[0m[0m instance_initiated_shutdown_behavior = (known after apply)
      [32m+[0m[0m instance_lifecycle                   = (known after apply)
      [32m+[0m[0m instance_state                       = (known after apply)
      [32m+[0m[0m instance_type                        = "t2.small"
      [32m+[0m[0m ipv6_address_count                   = (known after apply)
      [32m+[0m[0m ipv6_addresses                       = (known after apply)
      [32m+[0m[0m key_name                             = "tf-key"
      [32m+[0m[0m monitoring                           = (known after apply)
      [32m+[0m[0m outpost_arn                          = (known after apply)
      [32m+[0m[0m password_data                        = (known after apply)
      [32m+[0m[0m placement_group                      = (known after apply)
      [32m+[0m[0m placement_partition_number           = (known after apply)
      [32m+[0m[0m primary_network_interface_id         = (known after apply)
      [32m+[0m[0m private_dns                          = (known after apply)
      [32m+[0m[0m private_ip                           = (known after apply)
      [32m+[0m[0m public_dns                           = (known after apply)
      [32m+[0m[0m public_ip                            = (known after apply)
      [32m+[0m[0m secondary_private_ips                = (known after apply)
      [32m+[0m[0m security_groups                      = (known after apply)
      [32m+[0m[0m source_dest_check                    = true
      [32m+[0m[0m spot_instance_request_id             = (known after apply)
      [32m+[0m[0m subnet_id                            = (known after apply)
      [32m+[0m[0m tags                                 = {
          [32m+[0m[0m "Name" = "webserver-instance"
        }
      [32m+[0m[0m tags_all                             = {
          [32m+[0m[0m "Name" = "webserver-instance"
        }
      [32m+[0m[0m tenancy                              = (known after apply)
      [32m+[0m[0m user_data                            = (known after apply)
      [32m+[0m[0m user_data_base64                     = (known after apply)
      [32m+[0m[0m user_data_replace_on_change          = false
      [32m+[0m[0m vpc_security_group_ids               = (known after apply)
    }

[1m  # module.ec2.aws_key_pair.tf-key[0m will be created
[0m  [32m+[0m[0m resource "aws_key_pair" "tf-key" {
      [32m+[0m[0m arn             = (known after apply)
      [32m+[0m[0m fingerprint     = (known after apply)
      [32m+[0m[0m id              = (known after apply)
      [32m+[0m[0m key_name        = "tf-key"
      [32m+[0m[0m key_name_prefix = (known after apply)
      [32m+[0m[0m key_pair_id     = (known after apply)
      [32m+[0m[0m key_type        = (known after apply)
      [32m+[0m[0m public_key      = (known after apply)
      [32m+[0m[0m tags_all        = (known after apply)
    }

[1m  # module.ec2.local_file.rsa[0m will be created
[0m  [32m+[0m[0m resource "local_file" "rsa" {
      [32m+[0m[0m content              = (sensitive value)
      [32m+[0m[0m content_base64sha256 = (known after apply)
      [32m+[0m[0m content_base64sha512 = (known after apply)
      [32m+[0m[0m content_md5          = (known after apply)
      [32m+[0m[0m content_sha1         = (known after apply)
      [32m+[0m[0m content_sha256       = (known after apply)
      [32m+[0m[0m content_sha512       = (known after apply)
      [32m+[0m[0m directory_permission = "0777"
      [32m+[0m[0m file_permission      = "0777"
      [32m+[0m[0m filename             = "tf-key"
      [32m+[0m[0m id                   = (known after apply)
    }

[1m  # module.ec2.tls_private_key.rsa[0m will be created
[0m  [32m+[0m[0m resource "tls_private_key" "rsa" {
      [32m+[0m[0m algorithm                     = "RSA"
      [32m+[0m[0m ecdsa_curve                   = "P224"
      [32m+[0m[0m id                            = (known after apply)
      [32m+[0m[0m private_key_openssh           = (sensitive value)
      [32m+[0m[0m private_key_pem               = (sensitive value)
      [32m+[0m[0m private_key_pem_pkcs8         = (sensitive value)
      [32m+[0m[0m public_key_fingerprint_md5    = (known after apply)
      [32m+[0m[0m public_key_fingerprint_sha256 = (known after apply)
      [32m+[0m[0m public_key_openssh            = (known after apply)
      [32m+[0m[0m public_key_pem                = (known after apply)
      [32m+[0m[0m rsa_bits                      = 4096
    }

[1m  # module.rds.aws_db_instance.rds_db_instance[0m will be created
[0m  [32m+[0m[0m resource "aws_db_instance" "rds_db_instance" {
      [32m+[0m[0m address                               = (known after apply)
      [32m+[0m[0m allocated_storage                     = 10
      [32m+[0m[0m allow_major_version_upgrade           = false
      [32m+[0m[0m apply_immediately                     = false
      [32m+[0m[0m arn                                   = (known after apply)
      [32m+[0m[0m auto_minor_version_upgrade            = false
      [32m+[0m[0m availability_zone                     = "us-east-1a"
      [32m+[0m[0m backup_retention_period               = (known after apply)
      [32m+[0m[0m backup_target                         = (known after apply)
      [32m+[0m[0m backup_window                         = (known after apply)
      [32m+[0m[0m ca_cert_identifier                    = (known after apply)
      [32m+[0m[0m character_set_name                    = (known after apply)
      [32m+[0m[0m copy_tags_to_snapshot                 = false
      [32m+[0m[0m db_name                               = "arc_test_db"
      [32m+[0m[0m db_subnet_group_name                  = "demo-subnet-group"
      [32m+[0m[0m delete_automated_backups              = true
      [32m+[0m[0m deletion_protection                   = false
      [32m+[0m[0m domain_fqdn                           = (known after apply)
      [32m+[0m[0m endpoint                              = (known after apply)
      [32m+[0m[0m engine                                = "mysql"
      [32m+[0m[0m engine_version                        = "5.7"
      [32m+[0m[0m engine_version_actual                 = (known after apply)
      [32m+[0m[0m hosted_zone_id                        = (known after apply)
      [32m+[0m[0m id                                    = (known after apply)
      [32m+[0m[0m identifier                            = (known after apply)
      [32m+[0m[0m identifier_prefix                     = (known after apply)
      [32m+[0m[0m instance_class                        = "db.t2.small"
      [32m+[0m[0m iops                                  = (known after apply)
      [32m+[0m[0m kms_key_id                            = (known after apply)
      [32m+[0m[0m latest_restorable_time                = (known after apply)
      [32m+[0m[0m license_model                         = (known after apply)
      [32m+[0m[0m listener_endpoint                     = (known after apply)
      [32m+[0m[0m maintenance_window                    = (known after apply)
      [32m+[0m[0m manage_master_user_password           = true
      [32m+[0m[0m master_user_secret                    = (known after apply)
      [32m+[0m[0m master_user_secret_kms_key_id         = (known after apply)
      [32m+[0m[0m monitoring_interval                   = 0
      [32m+[0m[0m monitoring_role_arn                   = (known after apply)
      [32m+[0m[0m multi_az                              = false
      [32m+[0m[0m nchar_character_set_name              = (known after apply)
      [32m+[0m[0m network_type                          = (known after apply)
      [32m+[0m[0m option_group_name                     = (known after apply)
      [32m+[0m[0m parameter_group_name                  = "demo-parameter-group"
      [32m+[0m[0m performance_insights_enabled          = false
      [32m+[0m[0m performance_insights_kms_key_id       = (known after apply)
      [32m+[0m[0m performance_insights_retention_period = (known after apply)
      [32m+[0m[0m port                                  = (known after apply)
      [32m+[0m[0m publicly_accessible                   = false
      [32m+[0m[0m replica_mode                          = (known after apply)
      [32m+[0m[0m replicas                              = (known after apply)
      [32m+[0m[0m resource_id                           = (known after apply)
      [32m+[0m[0m skip_final_snapshot                   = true
      [32m+[0m[0m snapshot_identifier                   = (known after apply)
      [32m+[0m[0m status                                = (known after apply)
      [32m+[0m[0m storage_throughput                    = (known after apply)
      [32m+[0m[0m storage_type                          = (known after apply)
      [32m+[0m[0m tags_all                              = (known after apply)
      [32m+[0m[0m timezone                              = (known after apply)
      [32m+[0m[0m username                              = "admin"
      [32m+[0m[0m vpc_security_group_ids                = (known after apply)
    }

[1m  # module.rds.aws_db_parameter_group.db_parameter_group[0m will be created
[0m  [32m+[0m[0m resource "aws_db_parameter_group" "db_parameter_group" {
      [32m+[0m[0m arn         = (known after apply)
      [32m+[0m[0m description = "Managed by Terraform"
      [32m+[0m[0m family      = "mysql5.6"
      [32m+[0m[0m id          = (known after apply)
      [32m+[0m[0m name        = "demo-parameter-group"
      [32m+[0m[0m name_prefix = (known after apply)
      [32m+[0m[0m tags_all    = (known after apply)
    }

[1m  # module.rds.aws_db_subnet_group.db_subnet_group[0m will be created
[0m  [32m+[0m[0m resource "aws_db_subnet_group" "db_subnet_group" {
      [32m+[0m[0m arn                     = (known after apply)
      [32m+[0m[0m description             = "Managed by Terraform"
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m name                    = "demo-subnet-group"
      [32m+[0m[0m name_prefix             = (known after apply)
      [32m+[0m[0m subnet_ids              = (known after apply)
      [32m+[0m[0m supported_network_types = (known after apply)
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Name" = "demo-subnet-group"
        }
      [32m+[0m[0m tags_all                = {
          [32m+[0m[0m "Name" = "demo-subnet-group"
        }
      [32m+[0m[0m vpc_id                  = (known after apply)
    }

[1m  # module.rds.aws_kms_key.a[0m will be created
[0m  [32m+[0m[0m resource "aws_kms_key" "a" {
      [32m+[0m[0m arn                                = (known after apply)
      [32m+[0m[0m bypass_policy_lockout_safety_check = false
      [32m+[0m[0m customer_master_key_spec           = "SYMMETRIC_DEFAULT"
      [32m+[0m[0m deletion_window_in_days            = 10
      [32m+[0m[0m description                        = "KMS key 1"
      [32m+[0m[0m enable_key_rotation                = false
      [32m+[0m[0m id                                 = (known after apply)
      [32m+[0m[0m is_enabled                         = true
      [32m+[0m[0m key_id                             = (known after apply)
      [32m+[0m[0m key_usage                          = "ENCRYPT_DECRYPT"
      [32m+[0m[0m multi_region                       = (known after apply)
      [32m+[0m[0m policy                             = (known after apply)
      [32m+[0m[0m tags_all                           = (known after apply)
    }

[1mPlan:[0m 20 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Note: You didn't use the -out option to save this plan, so Terraform can't
guarantee to take exactly these actions if you run "terraform apply" now.
